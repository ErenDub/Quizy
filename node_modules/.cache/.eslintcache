[{"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\index.js":"1","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\App.js":"2","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\reportWebVitals.js":"3","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\data\\quizyDatas.js":"4","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\firstMap.jsx":"5","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\thirdMap.jsx":"6"},{"size":517,"mtime":1631261781024,"results":"7","hashOfConfig":"8"},{"size":871,"mtime":1631263298624,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1631261781025,"results":"10","hashOfConfig":"8"},{"size":12370,"mtime":1631262376033,"results":"11","hashOfConfig":"8"},{"size":2061,"mtime":1631261781023,"results":"12","hashOfConfig":"8"},{"size":624,"mtime":1631263291396,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p75f7s",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\index.js",[],"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\App.js",["27"],"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\reportWebVitals.js",[],"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\data\\quizyDatas.js",[],"C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\firstMap.jsx",["28","29","30","31"],"import React, { useState, useEffect } from 'react'\r\nimport ThirdMap from './thirdMap'\r\nfunction FirstMap(props) {\r\n  const [markCounter, setMarkCounter] = useState(0)\r\n  const [incMarkCounter, setIncMarkCounter] = useState(0)\r\n  const [outputIndex, setOutputIndex] = useState(0)\r\n  const [answearedCheck, setAnswearedCheck] = useState(\r\n    props.array.questions[outputIndex].answeared,\r\n  )\r\n  useEffect(() => {\r\n    markCounter === 0\r\n      ? props.setMarkSummer(props.markSummer)\r\n      : props.setMarkSummer(props.markSummer + 1)\r\n  }, [markCounter])\r\n  useEffect(() => {\r\n    incMarkCounter === 0\r\n      ? props.setIncMarkSummer(props.incMarkSummer)\r\n      : props.setIncMarkSummer(props.incMarkSummer + 1)\r\n  }, [incMarkCounter])\r\n  return (\r\n    <div>\r\n      <div className=\"topic\">{props.array.topic}</div>\r\n      <div>\r\n        <div className=\"question\">\r\n          {props.array.questions[outputIndex].question}\r\n        </div>\r\n        <div className=\"answersFlex\">\r\n          {props.array.questions[outputIndex].answers.map((e) => (\r\n            <ThirdMap\r\n              array={e}\r\n              markCounter={markCounter}\r\n              setMarkCounter={setMarkCounter}\r\n              incMarkCounter={incMarkCounter}\r\n              setIncMarkCounter={setIncMarkCounter}\r\n              ans={props.array.questions[outputIndex]}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {outputIndex > 0 ? (\r\n        <button\r\n          onClick={() => {\r\n            setOutputIndex(outputIndex - 1)\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {outputIndex < props.array.questions.length - 1 ? (\r\n        <button\r\n          onClick={() => {\r\n            setOutputIndex(outputIndex + 1)\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <div className=\"topicsum\">\r\n        {props.array.topic} - სწორი: {markCounter} - არასწორი: {incMarkCounter}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FirstMap\r\n","C:\\Users\\roini\\OneDrive\\Рабочий стол\\Quizy\\src\\thirdMap.jsx",["32","33"],{"ruleId":"34","severity":1,"message":"35","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":19},{"ruleId":"34","severity":1,"message":"38","line":7,"column":10,"nodeType":"36","messageId":"37","endLine":7,"endColumn":24},{"ruleId":"34","severity":1,"message":"39","line":7,"column":26,"nodeType":"36","messageId":"37","endLine":7,"endColumn":43},{"ruleId":"40","severity":1,"message":"41","line":14,"column":6,"nodeType":"42","endLine":14,"endColumn":19,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"41","line":19,"column":6,"nodeType":"42","endLine":19,"endColumn":22,"suggestions":"44"},{"ruleId":"34","severity":1,"message":"45","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":6,"column":28,"nodeType":"48","messageId":"49","endLine":6,"endColumn":30},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'answearedCheck' is assigned a value but never used.","'setAnswearedCheck' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["50"],["51"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [markCounter, props]",{"range":"56","text":"57"},"Update the dependencies array to be: [incMarkCounter, props]",{"range":"58","text":"59"},[540,553],"[markCounter, props]",[718,734],"[incMarkCounter, props]"]